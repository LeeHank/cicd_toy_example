# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

unit-test-job: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  needs:
    - lint-test-job # need pass lint-test-job first
      # (when unit-test-job & lint-test-job are in the same stage)
  script:
    - echo "Running unit tests... This will take about 10 seconds."
    - sleep 10
    - echo "Code coverage is 90%"
  before_script:
    - echo "install packages"
    - echo "db connection setting"
  after_script:
    - echo "delete unnecessary files"

lint-test-job: # This job also runs in the test stage.
  stage: test # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job: # This job runs in the deploy stage.
  only:
    - master # only do this job when push/merge_request to main
  stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - chmod +x ./deploy.sh # let deploy.sh file executable
    # 因為 deploy.sh 建立時的身份是 ubuntu,
    # 但 gitlab_runner 在跑時，他的身份不是 ubuntu, 而是 gitlab_runner
    # 所以如果不調整 ./deploy.sh 的權限的話，就會碰到 permission denied 的 error
    - ./deploy.sh # run current directory bash file
